version: '3.8'

services:
  # Backend API
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - ENVIRONMENT=development
      - LLM_PROVIDER=ollama
      - EMBEDDING_PROVIDER=local
      - VECTOR_DB=weaviate
      - WEAVIATE_URL=http://weaviate:8080
      - OLLAMA_BASE_URL=http://ollama:11434
      - API_HOST=0.0.0.0
      - API_PORT=8000
      - SIMILARITY_THRESHOLD=0.25
    volumes:
      - ./backend:/app
      - ./data:/app/data
    depends_on:
      - weaviate
      - ollama
    networks:
      - chatbot-network
    restart: unless-stopped

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_BASE_URL=http://localhost:8000
      - REACT_APP_CHAT_TITLE=AI Support Assistant
      - REACT_APP_WELCOME_MESSAGE=Hello! How can I help you today?
    depends_on:
      - backend
    networks:
      - chatbot-network
    restart: unless-stopped

  # Weaviate Vector Database
  weaviate:
    image: semitechnologies/weaviate:1.21.8
    ports:
      - "8080:8080"
    environment:
      QUERY_DEFAULTS_LIMIT: 25
      AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED: 'true'
      PERSISTENCE_DATA_PATH: '/var/lib/weaviate'
      DEFAULT_VECTORIZER_MODULE: 'none'
      ENABLE_MODULES: ''
      CLUSTER_HOSTNAME: 'node1'
    volumes:
      - weaviate_data:/var/lib/weaviate
    networks:
      - chatbot-network
    restart: unless-stopped

  # Ollama for local LLM
  ollama:
    image: ollama/ollama:latest
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    environment:
      - OLLAMA_ORIGINS=*
    networks:
      - chatbot-network
    restart: unless-stopped
    # Note: You'll need to manually pull models after starting
    # docker exec -it <container_id> ollama pull llama3.2

  # Optional: Redis for production caching/sessions
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - chatbot-network
    restart: unless-stopped
    profiles:
      - production

volumes:
  weaviate_data:
  ollama_data:
  redis_data:

networks:
  chatbot-network:
    driver: bridge
