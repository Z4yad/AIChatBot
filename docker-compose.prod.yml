services:
  # Production Backend Configuration
  backend:
    environment:
      - ENVIRONMENT=production
      - SIMILARITY_THRESHOLD=0.4
      - MAX_RETRIEVED_CHUNKS=5
      - LOG_LEVEL=INFO
      - SECRET_KEY=${SECRET_KEY:-your-production-secret-key}
      - CORS_ORIGINS=["https://your-domain.com"]
    volumes:
      - uploads_data:/app/uploads
      - ./data:/app/data
    # Remove development volume mount
    # - ./backend:/app
    deploy:
      replicas: 2
      resources:
        limits:
          cpus: '1.0'
          memory: 2G
        reservations:
          cpus: '0.5'
          memory: 1G

  # Production Frontend Configuration  
  frontend:
    environment:
      - REACT_APP_API_BASE_URL=https://api.your-domain.com
      - REACT_APP_CHAT_TITLE=AI Support Assistant
      - REACT_APP_WELCOME_MESSAGE=Welcome! How can I assist you today?
    # Remove development volume mount
    # - ./frontend:/app
    deploy:
      replicas: 2
      resources:
        limits:
          cpus: '0.5'
          memory: 1G

  # Production Weaviate Configuration
  weaviate:
    environment:
      AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED: 'false'
      AUTHENTICATION_APIKEY_ENABLED: 'true'
      AUTHENTICATION_APIKEY_ALLOWED_KEYS: '${WEAVIATE_API_KEY}'
      AUTHENTICATION_APIKEY_USERS: 'admin'
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 4G
        reservations:
          cpus: '1.0'
          memory: 2G

  # Production Ollama Configuration
  ollama:
    deploy:
      resources:
        limits:
          cpus: '4.0'
          memory: 8G
        reservations:
          cpus: '2.0'
          memory: 4G

  # Enable Redis for production
  redis:
    profiles: []  # Remove profile to enable by default
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M

  # Production Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    networks:
      - chatbot-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
